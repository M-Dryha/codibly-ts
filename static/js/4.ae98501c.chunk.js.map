{"version":3,"sources":["components/ModalBox/ModalBox.tsx","components/ProductsElement/ProductsElement.tsx","components/ProductsList/ProductsList.tsx","hooks.ts","components/Filter/Filter.tsx","Views/BasicView/BasicView.tsx"],"names":["ModalBox","product","Typography","sx","margin","padding","component","fontWeight","id","name","year","color","pantone_value","ProductsElement","useState","open","setOpen","style","position","top","left","transform","width","bgcolor","border","Grid","item","xs","Card","display","justifyContent","boxShadow","onClick","CardContent","Modal","onClose","Box","ProductsList","useSearchParams","searchParams","setSearchParams","currentPage","get","pages","setPages","useGetProductsByPaginationQuery","products","data","isLoading","isError","checkPages","total_pages","useEffect","page","toString","toast","error","p","container","spacing","mb","Loader","map","mr","ml","Button","variant","disabled","useAppSelector","useSelector","Filter","dispatch","useDispatch","useGetProductsQuery","idValue","state","filter","normalizedId","Number","visibleProduct","d","total","height","TextField","label","type","InputLabelProps","shrink","value","onChange","e","regexNumber","test","target","onChangeFilter","helperText","fontSize","theme","createTheme","palette","primary","light","main","dark","contrastText","secondary","BasicView","Container","ThemeProvider"],"mappings":"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","file":"static/js/4.ae98501c.chunk.js","sourcesContent":["import { Typography } from '@mui/material';\r\nimport { IProduct } from '../../types/data';\r\n\r\ninterface ProductItemProps {\r\n  product: IProduct;\r\n}\r\n\r\nconst ModalBox: React.FC<ProductItemProps> = ({ product }) => {\r\n  return (\r\n    <>\r\n      <Typography sx={{ margin: 0, padding: '10px' }}>\r\n        <Typography component={'span'} sx={{ fontWeight: 'bold' }}>\r\n          id:{' '}\r\n        </Typography>\r\n        {product.id}\r\n      </Typography>\r\n      <Typography>\r\n        {' '}\r\n        <Typography sx={{ margin: 0, padding: '10px' }}>\r\n          <Typography component={'span'} sx={{ fontWeight: 'bold' }}>\r\n            name:{' '}\r\n          </Typography>{' '}\r\n          {product.name}\r\n        </Typography>{' '}\r\n      </Typography>\r\n      <Typography sx={{ margin: 0, padding: '10px' }}>\r\n        <Typography component={'span'} sx={{ fontWeight: 'bold' }}>\r\n          year:{' '}\r\n        </Typography>\r\n        {product.year}\r\n      </Typography>\r\n      <Typography sx={{ margin: 0, padding: '10px' }}>\r\n        <Typography component={'span'} sx={{ fontWeight: 'bold' }}>\r\n          color:{' '}\r\n        </Typography>\r\n        {product.color}\r\n      </Typography>\r\n      <Typography sx={{ margin: 0, padding: '10px' }}>\r\n        <Typography component={'span'} sx={{ fontWeight: 'bold' }}>\r\n          pantone_value:{' '}\r\n        </Typography>\r\n        {product.pantone_value}\r\n      </Typography>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalBox;\r\n","import Modal from '@mui/material/Modal';\r\nimport { Box, Card, CardContent, Typography, Grid } from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { IProduct } from '../../types/data';\r\nimport ModalBox from '.././ModalBox';\r\n\r\ninterface ProductItemProps {\r\n  product: IProduct;\r\n}\r\n\r\nconst ProductsElement: React.FC<ProductItemProps> = ({ product }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleClose = () => setOpen(false);\r\n\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: `${product.color}`,\r\n    border: '2px solid #000',\r\n\r\n    padding: 4,\r\n  };\r\n  return (\r\n    <Grid item xs={6}>\r\n      <Card\r\n        sx={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          bgcolor: `${product.color}`,\r\n          '&:hover': {\r\n            boxShadow:\r\n              'inset 2px 2px 5px rgba(154, 147, 140, 0.5), 1px 1px 5px rgba(255, 255, 255, 1)',\r\n          },\r\n        }}\r\n        onClick={handleOpen}\r\n      >\r\n        <CardContent>\r\n          <Typography sx={{ display: 'flex', margin: 0, padding: '10px' }}>\r\n            <Typography component={'span'} sx={{ fontWeight: 'bold' }}>\r\n              id:\r\n            </Typography>\r\n            {product.id}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardContent>\r\n          <Typography sx={{ margin: 0, padding: '10px' }}>\r\n            <Typography component={'span'} sx={{ fontWeight: 'bold' }}>\r\n              name:{' '}\r\n            </Typography>{' '}\r\n            {product.name}\r\n          </Typography>\r\n        </CardContent>\r\n        <CardContent>\r\n          <Typography sx={{ margin: 0, padding: '10px' }}>\r\n            <Typography component={'span'} sx={{ fontWeight: 'bold' }}>\r\n              year:{' '}\r\n            </Typography>{' '}\r\n            {product.year}\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Modal open={open} onClose={handleClose}>\r\n        <Box sx={style}>\r\n          <ModalBox product={product} />\r\n        </Box>\r\n      </Modal>\r\n    </Grid>\r\n  );\r\n};\r\nexport default ProductsElement;\r\n","import { ToastContainer, toast } from 'react-toastify';\r\nimport { useSearchParams } from 'react-router-dom';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useState, useEffect } from 'react';\r\nimport { Box, Button, Grid } from '@mui/material';\r\nimport KeyboardArrowRightIcon from '@mui/icons-material/KeyboardArrowRight';\r\nimport KeyboardArrowLeftIcon from '@mui/icons-material/KeyboardArrowLeft';\r\nimport { useGetProductsByPaginationQuery } from '../../redux/myProductSlice';\r\nimport ProductsElement from '.././ProductsElement';\r\nimport Loader from '.././Loader';\r\n\r\nconst ProductsList: React.FC = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const currentPage = searchParams.get('page');\r\n  const [pages, setPages] = useState(currentPage === null ? 1 : +currentPage);\r\n  const {\r\n    data: products,\r\n    isLoading,\r\n    isError,\r\n  } = useGetProductsByPaginationQuery(pages);\r\n\r\n  const checkPages = products && pages === products.total_pages;\r\n\r\n  useEffect(() => {\r\n    setSearchParams({ page: pages.toString() });\r\n  }, [pages, currentPage, setSearchParams]);\r\n\r\n  useEffect(() => {\r\n    if (checkPages) {\r\n      toast.error('There is no data');\r\n    }\r\n  }, [checkPages]);\r\n\r\n  useEffect(() => {\r\n    if (isError) {\r\n      toast.error('Ooops, something went wrong');\r\n    }\r\n  }, [isError]);\r\n\r\n  return (\r\n    <>\r\n      <Box sx={{ p: 3 }}>\r\n        <Grid container spacing={2} sx={{ mb: '30px' }}>\r\n          {isLoading && <Loader />}\r\n          {products &&\r\n            products.data.map(product => (\r\n              <ProductsElement key={product.id} product={product} />\r\n            ))}\r\n        </Grid>\r\n        <Box sx={{ display: 'flex', mr: 'auto', ml: 'auto', width: 100 }}>\r\n          <Box sx={{ mr: '20px' }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setPages(pages - 1)}\r\n              disabled={pages === 1}\r\n            >\r\n              <KeyboardArrowLeftIcon />\r\n            </Button>\r\n          </Box>\r\n          <Box>\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={() => setPages(pages + 1)}\r\n              disabled={checkPages}\r\n            >\r\n              <KeyboardArrowRightIcon />\r\n            </Button>\r\n          </Box>\r\n        </Box>\r\n        <ToastContainer />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from './redux/store';\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import { useEffect } from 'react';\r\nimport AutorenewTwoToneIcon from '@mui/icons-material/AutorenewTwoTone';\r\nimport { TextField, Box } from '@mui/material';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { useGetProductsQuery } from '../../redux/myProductSlice';\r\nimport ProductsElement from '../ProductsElement';\r\nimport { onChangeFilter } from '../../redux/myFilterSlice';\r\nimport { useAppDispatch, useAppSelector } from '../../hooks';\r\nimport { ChangeEventHandler } from 'react';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { data, error } = useGetProductsQuery();\r\n  const idValue = useAppSelector(state => state.filter);\r\n  const normalizedId = Number(idValue);\r\n  const visibleProduct = data?.data.filter(d => d.id === normalizedId);\r\n\r\n  useEffect(() => {\r\n    if (data && normalizedId > data.total) {\r\n      toast.error(`No data for id: ${normalizedId}`);\r\n    }\r\n  }, [data, normalizedId]);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      toast.error('Ooops, something went wrong');\r\n    }\r\n  }, [error]);\r\n\r\n  const changeFilter: ChangeEventHandler<HTMLInputElement> = e => {\r\n    const regex = /^[0-9\\b]+$/;\r\n    const regexNumber = regex.test(e.target.value);\r\n    if (e.target.value === '' || regexNumber) {\r\n      dispatch(onChangeFilter(e.target.value));\r\n    }\r\n    if (e.target.value !== '' && !regexNumber) {\r\n      toast.error('Please, enter a valid number');\r\n    }\r\n    if (e.target.value === '0') {\r\n      toast.error(`No data for id: ${normalizedId}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: 544, mr: 'auto', ml: 'auto', height: 200 }}>\r\n      <TextField\r\n        error\r\n        label=\"Find product by id\"\r\n        type=\"number\"\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        value={idValue}\r\n        onChange={changeFilter}\r\n        sx={{ width: 544 }}\r\n        helperText=\"Enter a number\"\r\n      />\r\n      <Box sx={{ p: 3 }}>\r\n        {!idValue && (\r\n          <Box sx={{ width: 60, mr: 'auto', ml: 'auto' }}>\r\n            <AutorenewTwoToneIcon sx={{ fontSize: 60, color: 'grey' }} />\r\n          </Box>\r\n        )}\r\n        {data &&\r\n          visibleProduct?.map(product => (\r\n            <ProductsElement key={product.id} product={product} />\r\n          ))}\r\n      </Box>\r\n      <ToastContainer />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import Container from '@mui/material/Container';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport ProductsList from '../../components/ProductsList';\r\nimport Filter from '../../components/Filter';\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      light: '#c2185b',\r\n      main: '#f06292',\r\n      dark: '#f8bbd0',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: '#ff7961',\r\n      main: '#f44336',\r\n      dark: '#ba000d',\r\n      contrastText: '#000',\r\n    },\r\n  },\r\n});\r\n\r\nconst BasicView = () => {\r\n  return (\r\n    <Container>\r\n      <ThemeProvider theme={theme}>\r\n        <Filter />\r\n        <ProductsList />\r\n      </ThemeProvider>\r\n    </Container>\r\n  );\r\n};\r\nexport default BasicView;\r\n"],"sourceRoot":""}